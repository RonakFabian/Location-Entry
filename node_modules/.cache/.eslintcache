[{"E:\\React-todo-list-master\\src\\index.js":"1","E:\\React-todo-list-master\\src\\reportWebVitals.js":"2","E:\\React-todo-list-master\\src\\App.js":"3","E:\\React-todo-list-master\\src\\components\\TodoList.js":"4","E:\\React-todo-list-master\\src\\components\\Card.js":"5","E:\\React-todo-list-master\\src\\modals\\CreateTask.js":"6","E:\\React-todo-list-master\\src\\modals\\EditTask.js":"7","E:\\_FE_GIT\\Location-Entry\\src\\index.js":"8","E:\\_FE_GIT\\Location-Entry\\src\\App.js":"9","E:\\_FE_GIT\\Location-Entry\\src\\reportWebVitals.js":"10","E:\\_FE_GIT\\Location-Entry\\src\\components\\TodoList.js":"11","E:\\_FE_GIT\\Location-Entry\\src\\components\\Card.js":"12","E:\\_FE_GIT\\Location-Entry\\src\\modals\\CreateTask.js":"13","E:\\_FE_GIT\\Location-Entry\\src\\modals\\EditTask.js":"14"},{"size":500,"mtime":1619253139000,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1619253139000,"results":"17","hashOfConfig":"16"},{"size":224,"mtime":1681116983036,"results":"18","hashOfConfig":"16"},{"size":1907,"mtime":1681121472658,"results":"19","hashOfConfig":"16"},{"size":2213,"mtime":1681124639390,"results":"20","hashOfConfig":"16"},{"size":2734,"mtime":1681122205080,"results":"21","hashOfConfig":"16"},{"size":2700,"mtime":1681116775222,"results":"22","hashOfConfig":"16"},{"size":517,"mtime":1681131776229,"results":"23","hashOfConfig":"24"},{"size":238,"mtime":1681131776227,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1681131776231,"results":"26","hashOfConfig":"24"},{"size":2541,"mtime":1681131776228,"results":"27","hashOfConfig":"24"},{"size":2288,"mtime":1681131776228,"results":"28","hashOfConfig":"24"},{"size":2824,"mtime":1681131776230,"results":"29","hashOfConfig":"24"},{"size":2783,"mtime":1681131776231,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17gc41z",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n6ya99",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},"E:\\React-todo-list-master\\src\\index.js",[],[],"E:\\React-todo-list-master\\src\\reportWebVitals.js",[],[],"E:\\React-todo-list-master\\src\\App.js",[],[],"E:\\React-todo-list-master\\src\\components\\TodoList.js",[],[],"E:\\React-todo-list-master\\src\\components\\Card.js",["75"],[],"E:\\React-todo-list-master\\src\\modals\\CreateTask.js",[],[],"E:\\React-todo-list-master\\src\\modals\\EditTask.js",["76"],[],"E:\\_FE_GIT\\Location-Entry\\src\\index.js",[],[],"E:\\_FE_GIT\\Location-Entry\\src\\App.js",[],[],"E:\\_FE_GIT\\Location-Entry\\src\\reportWebVitals.js",[],[],"E:\\_FE_GIT\\Location-Entry\\src\\components\\TodoList.js",[],[],"E:\\_FE_GIT\\Location-Entry\\src\\components\\Card.js",["77"],[],"import React, { useState } from 'react';\r\nimport EditTask from '../modals/EditTask'\r\n\r\nconst Card = ({ taskObj, index, deleteTask, updateListArray }) =>\r\n{\r\n    const [modal, setModal] = useState(false);\r\n\r\n    let url = \"\"\r\n    const toggle = () =>\r\n    {\r\n        setModal(!modal);\r\n    }\r\n\r\n    const updateTask = (obj) =>\r\n    {\r\n        updateListArray(obj, index)\r\n    }\r\n\r\n    const handleDelete = () =>\r\n    {\r\n        deleteTask(index)\r\n    }\r\n\r\n    const Locate = () =>\r\n    {\r\n        console.log(taskObj);\r\n        url = \"geo:\" + taskObj.Latitude + \",\" + taskObj.Longitude + \"?q=\" + taskObj.Latitude + \",\" + taskObj.Longitude\r\n        console.log(url);\r\n        window.open(url);\r\n\r\n    }\r\n    const colors = [\r\n        {\r\n            primaryColor: \"#5D93E1\",\r\n            secondaryColor: \"#ECF3FC\"\r\n        },\r\n        {\r\n            primaryColor: \"#F9D288\",\r\n            secondaryColor: \"#FEFAF1\"\r\n        },\r\n        {\r\n            primaryColor: \"#5DC250\",\r\n            secondaryColor: \"#F2FAF1\"\r\n        },\r\n        {\r\n            primaryColor: \"#F48687\",\r\n            secondaryColor: \"#FDF1F1\"\r\n        },\r\n        {\r\n            primaryColor: \"#B964F7\",\r\n            secondaryColor: \"#F3F0FD\"\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div class=\"card justify-content-center w-100 mt-2 md-2 p-2\">\r\n            <div class=\"task-holder top-border\">\r\n                < div class=\"text-center  mb-3\" >\r\n                    <h3 class=\" p-2 header-text\">{taskObj.Name}</h3>\r\n                </div>\r\n                <div><p className=\"mt-1\">Latitude : {taskObj.Latitude}</p></div>\r\n                <div><p className=\"mt-1\">Longitude : {taskObj.Longitude}</p></div>\r\n                <div><p className=\"mt-1\">Description : {taskObj.Description}</p></div>\r\n\r\n                <div class=\"mx-auto\">\r\n                    <button class=\"btn btn-success m-2 \" onClick={Locate}>Locate</button>\r\n                    <button class=\"btn btn-primary m-2\" onClick={() => setModal(true)}>Edit</button>\r\n                    <button class=\"btn btn-danger m-2\" onClick={handleDelete}>Delete</button>\r\n                </div>\r\n            </div>\r\n            <EditTask modal={modal} toggle={toggle} updateTask={updateTask} taskObj={taskObj} />\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Card;","E:\\_FE_GIT\\Location-Entry\\src\\modals\\CreateTask.js",[],[],"E:\\_FE_GIT\\Location-Entry\\src\\modals\\EditTask.js",["78"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst EditTaskPopup = ({ modal, toggle, updateTask, taskObj }) =>\r\n{\r\n    const [taskName, setTaskName] = useState('');\r\n    const [latitude, setLatitude] = useState('');\r\n    const [longitude, setLongitude] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const handleChange = (e) =>\r\n    {\r\n\r\n        const { name, value } = e.target\r\n\r\n        if (name === \"taskName\")\r\n        {\r\n            setTaskName(value)\r\n        }\r\n        else if (name === \"latitude\")\r\n        {\r\n            setLatitude(value)\r\n\r\n        }\r\n        else if (name === \"longitude\")\r\n        {\r\n            setLongitude(value);\r\n        }\r\n        else\r\n        {\r\n            setDescription(value)\r\n        }\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        setTaskName(taskObj.Name)\r\n        setLatitude(taskObj.Latitude)\r\n        setLongitude(taskObj.Longitude)\r\n        setDescription(taskObj.Description)\r\n    }, [])\r\n\r\n    const handleUpdate = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        taskObj['Name'] = taskName\r\n        taskObj['Latitude'] = latitude\r\n        taskObj['Longitude'] = longitude\r\n        taskObj['Description'] = description\r\n        updateTask(taskObj)\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>Update Task</ModalHeader>\r\n            <ModalBody>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Task Name</label>\r\n                    <input type=\"text\" className=\"form-control\" value={taskName} onChange={handleChange} name=\"taskName\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Latitude</label>\r\n                    <input type=\"text\" className=\"form-control\" value={latitude} onChange={handleChange} name=\"latitude\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Longitude</label>\r\n                    <input type=\"text\" className=\"form-control\" value={longitude} onChange={handleChange} name=\"longitude\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Description</label>\r\n                    <textarea rows=\"5\" className=\"form-control\" value={description} onChange={handleChange} name=\"description\"></textarea>\r\n                </div>\r\n\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\r\n                <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EditTaskPopup;",{"ruleId":"79","severity":1,"message":"80","line":32,"column":11,"nodeType":"81","messageId":"82","endLine":32,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":41,"column":8,"nodeType":"85","endLine":41,"endColumn":10,"suggestions":"86"},{"ruleId":"79","severity":1,"message":"80","line":32,"column":11,"nodeType":"81","messageId":"82","endLine":32,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":41,"column":8,"nodeType":"85","endLine":41,"endColumn":10,"suggestions":"87"},"no-unused-vars","'colors' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'taskObj.Description', 'taskObj.Latitude', 'taskObj.Longitude', and 'taskObj.Name'. Either include them or remove the dependency array. If 'setTaskName' needs the current value of 'taskObj.Name', you can also switch to useReducer instead of useState and read 'taskObj.Name' in the reducer.","ArrayExpression",["88"],["89"],{"desc":"90","fix":"91"},{"desc":"90","fix":"92"},"Update the dependencies array to be: [taskObj.Description, taskObj.Latitude, taskObj.Longitude, taskObj.Name]",{"range":"93","text":"94"},{"range":"95","text":"94"},[1021,1023],"[taskObj.Description, taskObj.Latitude, taskObj.Longitude, taskObj.Name]",[1061,1063]]