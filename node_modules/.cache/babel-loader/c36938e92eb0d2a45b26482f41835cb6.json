{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\React-todo-list-master\\\\src\\\\modals\\\\EditTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst EditTaskPopup = ({\n  modal,\n  toggle,\n  updateTask,\n  taskObj\n}) => {\n  _s();\n\n  const [taskName, setTaskName] = useState('');\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  const [description, setDescription] = useState('');\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"taskName\") {\n      setTaskName(value);\n    } else if (name === \"latitude\") {\n      setLatitude(value);\n    } else if (name === \"longitude\") {\n      setLongitude(value);\n    } else {\n      setDescription(value);\n    }\n  };\n\n  useEffect(() => {\n    setTaskName(taskObj.Name);\n    setLatitude(taskObj.Latitude);\n    setLongitude(taskObj.Longitude);\n    setDescription(taskObj.Description);\n  }, []);\n\n  const handleUpdate = e => {\n    e.preventDefault();\n    let tempObj = {};\n    tempObj['Name'] = taskName; // taskObj['Latitude'] = latitude\n    // taskObj['Longitude'] = longitude\n\n    tempObj['Description'] = description;\n    updateTask(tempObj);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: toggle,\n      children: \"Update Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: taskName,\n          onChange: handleChange,\n          name: \"taskName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Latitude\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: latitude,\n          onChange: handleChange,\n          name: \"latitude\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Longitude\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: longitude,\n          onChange: handleChange,\n          name: \"longitude\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          className: \"form-control\",\n          value: description,\n          onChange: handleChange,\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: toggle,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditTaskPopup, \"X4aXLYPdYsEhYDn+eHRVJjRk1Es=\");\n\n_c = EditTaskPopup;\nexport default EditTaskPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTaskPopup\");","map":{"version":3,"sources":["E:/React-todo-list-master/src/modals/EditTask.js"],"names":["React","useState","useEffect","Button","Modal","ModalHeader","ModalBody","ModalFooter","EditTaskPopup","modal","toggle","updateTask","taskObj","taskName","setTaskName","latitude","setLatitude","longitude","setLongitude","description","setDescription","handleChange","e","name","value","target","Name","Latitude","Longitude","Description","handleUpdate","preventDefault","tempObj"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst EditTaskPopup = ({ modal, toggle, updateTask, taskObj }) =>\n{\n    const [taskName, setTaskName] = useState('');\n    const [latitude, setLatitude] = useState('');\n    const [longitude, setLongitude] = useState('');\n    const [description, setDescription] = useState('');\n\n    const handleChange = (e) =>\n    {\n\n        const { name, value } = e.target\n\n        if (name === \"taskName\")\n        {\n            setTaskName(value)\n        }\n        else if (name === \"latitude\")\n        {\n            setLatitude(value)\n        }\n        else if (name === \"longitude\")\n        {\n            setLongitude(value);\n        }\n        else\n        {\n            setDescription(value)\n        }\n\n    }\n\n    useEffect(() =>\n    {\n        setTaskName(taskObj.Name)\n        setLatitude(taskObj.Latitude)\n        setLongitude(taskObj.Longitude)\n        setDescription(taskObj.Description)\n    }, [])\n\n    const handleUpdate = (e) =>\n    {\n        e.preventDefault();\n        let tempObj = {}\n        tempObj['Name'] = taskName\n        // taskObj['Latitude'] = latitude\n        // taskObj['Longitude'] = longitude\n        tempObj['Description'] = description\n        updateTask(tempObj)\n    }\n\n    return (\n        <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}>Update Task</ModalHeader>\n            <ModalBody>\n\n                <div className=\"form-group\">\n                    <label>Task Name</label>\n                    <input type=\"text\" className=\"form-control\" value={taskName} onChange={handleChange} name=\"taskName\" />\n                </div>\n                <div className=\"form-group\">\n                    <label>Latitude</label>\n                    <input type=\"text\" className=\"form-control\" value={latitude} onChange={handleChange} name=\"latitude\" />\n                </div>\n                <div className=\"form-group\">\n                    <label>Longitude</label>\n                    <input type=\"text\" className=\"form-control\" value={longitude} onChange={handleChange} name=\"longitude\" />\n                </div>\n                <div className=\"form-group\">\n                    <label>Description</label>\n                    <textarea rows=\"5\" className=\"form-control\" value={description} onChange={handleChange} name=\"description\"></textarea>\n                </div>\n\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\n                <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nexport default EditTaskPopup;"]},"metadata":{},"sourceType":"module"}