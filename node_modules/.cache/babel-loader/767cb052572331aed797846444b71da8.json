{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\React-todo-list-master\\\\src\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CreateTask from '../modals/CreateTask';\nimport Card from './Card';\n\nconst TodoList = () => {\n  _s();\n\n  const [modal, setModal] = useState(false);\n  const [taskList, setTaskList] = useState([]);\n  useEffect(() => {\n    let arr = localStorage.getItem(\"taskList\");\n\n    if (arr) {\n      let obj = JSON.parse(arr);\n      setTaskList(obj);\n    }\n  }, []);\n\n  const deleteTask = index => {\n    let tempList = taskList;\n    tempList.splice(index, 1);\n    localStorage.setItem(\"taskList\", JSON.stringify(tempList));\n    setTaskList(tempList);\n    window.location.reload();\n  };\n\n  const updateListArray = (obj, index) => {\n    let tempList = taskList;\n    tempList[index] = obj;\n    localStorage.setItem(\"taskList\", JSON.stringify(tempList));\n    setTaskList(tempList);\n    window.location.reload();\n  };\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  const saveTask = taskObj => {\n    let tempList = taskList;\n    tempList.push(taskObj);\n    localStorage.setItem(\"taskList\", JSON.stringify(tempList));\n    setTaskList(taskList);\n    setModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Location Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-2\",\n        onClick: () => setModal(true),\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-container\",\n      children: taskList && taskList.map((obj, index) => /*#__PURE__*/_jsxDEV(Card, {\n        taskObj: obj,\n        index: index,\n        deleteTask: deleteTask,\n        updateListArray: updateListArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 59\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateTask, {\n      toggle: toggle,\n      modal: modal,\n      save: saveTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodoList, \"gmMHBjvTac89/MD9hAX6xRdHZmY=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["E:/React-todo-list-master/src/components/TodoList.js"],"names":["React","useEffect","useState","CreateTask","Card","TodoList","modal","setModal","taskList","setTaskList","arr","localStorage","getItem","obj","JSON","parse","deleteTask","index","tempList","splice","setItem","stringify","window","location","reload","updateListArray","toggle","saveTask","taskObj","push","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CreateTask from '../modals/CreateTask'\nimport Card from './Card';\n\nconst TodoList = () =>\n{\n    const [modal, setModal] = useState(false);\n    const [taskList, setTaskList] = useState([])\n\n    useEffect(() =>\n    {\n        let arr = localStorage.getItem(\"taskList\")\n\n        if (arr)\n        {\n            let obj = JSON.parse(arr)\n            setTaskList(obj)\n        }\n    }, [])\n\n\n    const deleteTask = (index) =>\n    {\n        let tempList = taskList\n        tempList.splice(index, 1)\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\n        setTaskList(tempList)\n        window.location.reload()\n    }\n\n    const updateListArray = (obj, index) =>\n    {\n        let tempList = taskList\n        tempList[index] = obj\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\n        setTaskList(tempList)\n        window.location.reload()\n    }\n\n    const toggle = () =>\n    {\n        setModal(!modal);\n    }\n\n    const saveTask = (taskObj) =>\n    {\n        let tempList = taskList\n        tempList.push(taskObj)\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\n        setTaskList(taskList)\n        setModal(false)\n    }\n\n\n    return (\n        <>\n            <div className=\"header text-center\">\n                <h3>Location Entry</h3>\n                <button className=\"btn btn-primary mt-2\" onClick={() => setModal(true)} >Create Task</button>\n            </div>\n            <div className=\"task-container\">\n                {taskList && taskList.map((obj, index) => <Card taskObj={obj} index={index} deleteTask={deleteTask} updateListArray={updateListArray} />)}\n            </div>\n            <CreateTask toggle={toggle} modal={modal} save={saveTask} />\n        </>\n    );\n};\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}