[{"E:\\React-todo-list-master\\src\\reportWebVitals.js":"1","E:\\React-todo-list-master\\src\\modals\\EditTask.js":"2","E:\\React-todo-list-master\\src\\components\\Card.js":"3","E:\\React-todo-list-master\\src\\modals\\CreateTask.js":"4","E:\\React-todo-list-master\\src\\index.js":"5","E:\\React-todo-list-master\\src\\components\\TodoList.js":"6","E:\\React-todo-list-master\\src\\App.js":"7"},{"size":362,"mtime":1619253139000,"results":"8","hashOfConfig":"9"},{"size":2725,"mtime":1680950210595,"results":"10","hashOfConfig":"9"},{"size":2071,"mtime":1680957848749,"results":"11","hashOfConfig":"9"},{"size":2500,"mtime":1680949606657,"results":"12","hashOfConfig":"9"},{"size":500,"mtime":1619253139000,"results":"13","hashOfConfig":"9"},{"size":2001,"mtime":1680958422280,"results":"14","hashOfConfig":"9"},{"size":303,"mtime":1680958310960,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kgave8",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\React-todo-list-master\\src\\reportWebVitals.js",[],"E:\\React-todo-list-master\\src\\modals\\EditTask.js",["31"],"import React, { useState, useEffect } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst EditTaskPopup = ({ modal, toggle, updateTask, taskObj }) =>\n{\n    const [taskName, setTaskName] = useState('');\n    const [latitude, setLatitude] = useState('');\n    const [longitude, setLongitude] = useState('');\n    const [description, setDescription] = useState('');\n\n    const handleChange = (e) =>\n    {\n\n        const { name, value } = e.target\n\n        if (name === \"taskName\")\n        {\n            setTaskName(value)\n        }\n        else if (name === \"latitude\")\n        {\n            setLatitude(value)\n        }\n        else if (name === \"longitude\")\n        {\n            setLongitude(value);\n        }\n        else\n        {\n            setDescription(value)\n        }\n\n    }\n\n    useEffect(() =>\n    {\n        setTaskName(taskObj.Name)\n        setLatitude(taskObj.Latitude)\n        setLongitude(taskObj.Longitude)\n        setDescription(taskObj.Description)\n    }, [])\n\n    const handleUpdate = (e) =>\n    {\n        e.preventDefault();\n        let tempObj = {}\n        tempObj['Name'] = taskName\n        taskObj['Latitude'] = latitude\n        taskObj['Longitude'] = longitude\n        tempObj['Description'] = description\n        updateTask(tempObj)\n    }\n\n    return (\n        <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}>Update Task</ModalHeader>\n            <ModalBody>\n\n                <div className=\"form-group\">\n                    <label>Task Name</label>\n                    <input type=\"text\" className=\"form-control\" value={taskName} onChange={handleChange} name=\"taskName\" />\n                </div>\n                <div className=\"form-group\">\n                    <label>Latitude</label>\n                    <input type=\"text\" className=\"form-control\" value={latitude} onChange={handleChange} name=\"latitude\" />\n                </div>\n                <div className=\"form-group\">\n                    <label>Longitude</label>\n                    <input type=\"text\" className=\"form-control\" value={longitude} onChange={handleChange} name=\"longitude\" />\n                </div>\n                <div className=\"form-group\">\n                    <label>Description</label>\n                    <textarea rows=\"5\" className=\"form-control\" value={description} onChange={handleChange} name=\"description\"></textarea>\n                </div>\n\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\n                <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nexport default EditTaskPopup;","E:\\React-todo-list-master\\src\\components\\Card.js",[],"E:\\React-todo-list-master\\src\\modals\\CreateTask.js",[],"E:\\React-todo-list-master\\src\\index.js",[],"E:\\React-todo-list-master\\src\\components\\TodoList.js",[],"E:\\React-todo-list-master\\src\\App.js",["32"],{"ruleId":"33","severity":1,"message":"34","line":41,"column":8,"nodeType":"35","endLine":41,"endColumn":10,"suggestions":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":12},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'taskObj.Description', 'taskObj.Latitude', 'taskObj.Longitude', and 'taskObj.Name'. Either include them or remove the dependency array. If 'setTaskName' needs the current value of 'taskObj.Name', you can also switch to useReducer instead of useState and read 'taskObj.Name' in the reducer.","ArrayExpression",["41"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",{"desc":"42","fix":"43"},"Update the dependencies array to be: [taskObj.Description, taskObj.Latitude, taskObj.Longitude, taskObj.Name]",{"range":"44","text":"45"},[1021,1023],"[taskObj.Description, taskObj.Latitude, taskObj.Longitude, taskObj.Name]"]